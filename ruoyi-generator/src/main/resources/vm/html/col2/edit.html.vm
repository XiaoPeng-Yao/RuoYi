<!DOCTYPE html>
<html lang="zh" xmlns:th="http://www.thymeleaf.org" >
<head>
    <th:block th:include="include :: header('修改${functionName}')" />
#foreach($column in $effectiveeditcols)
#if($column.edit && !$column.superColumn && !$column.pk && $column.htmlType == "datetime")
    <th:block th:include="include :: datetimepicker-css" />
#break
#end
#end
#foreach($column in $effectiveeditcols)
#if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "upload")
    <th:block th:include="include :: bootstrap-fileinput-css"/>
#break
#end
#end
#foreach($column in $effectiveeditcols)
#if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "summernote")
    <th:block th:include="include :: summernote-css" />
#break
#end
#end
</head>
<body class="white-bg">
    <div class="wrapper wrapper-content animated fadeInRight ibox-content">
        <form class="form-horizontal m" id="form-${businessName}-edit" th:object="${${className}}">
#if( $hiddenleftjoinfiledcols.size() > 0 )
#foreach($column in $hiddenleftjoinfiledcols)
            <input type="hidden" name="${column.javaField}" id="${column.javaField}" />
#end
#end

#if($table.sub)
            <h4 class="form-header h4">${functionName}信息</h4>
#end
            <input name="${pkColumn.javaField}" th:field="*{${pkColumn.javaField}}" type="hidden">

#set($cumvar=0)
#set($colcount=$effectiveeditcols.size())
#foreach($column in $effectiveeditcols)
#if($column.edit && !$column.pk)
#if(($column.usableColumn) || (!$column.superColumn))
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#set($field=$column.javaField)
#set($dictType=$column.dictType)

#set($cumvar=$cumvar+1)
#if($column.htmlType == "textarea")
#if($cumvar%2==0)
        </div>
#end
        <div class="row mt10">
            <div class="col-sm-12">
                <div class="form-group">
                    <label class="col-sm-2 control-label#if($column.required) is-required#end">${comment}：</label>
                    <div class="col-sm-10">
                        <textarea name="${field}" maxlength="500" class="form-control" rows="3" #if($column.required) required#end>[[*{${field}}]]</textarea>
                    </div>
                </div>
            </div>
        </div>
#else
#if($cumvar%2==1)
        <div class="row mt10">
#end
#parse("\vm\html\col2\editfiledtpl.vm")
#if($cumvar%2==0 || ($cumvar>=$colcount))
        </div>
#end
#end

#end
#end
#end
#if($table.sub)
            <h4 class="form-header h4">${subTable.functionName}信息</h4>
            <div class="row mt10">
                <div class="col-sm-12">
                    <button type="button" class="btn btn-white btn-sm" onclick="addColumn()"><i class="fa fa-plus"> 增加</i></button>
                    <button type="button" class="btn btn-white btn-sm" onclick="sub.delColumn()"><i class="fa fa-minus"> 删除</i></button>
                    <div class="col-sm-12 select-table table-striped">
                        <table id="bootstrap-table"></table>
                    </div>
                </div>
            </div>
#end
        </form>
    </div>
    <th:block th:include="include :: footer" />
#foreach($column in $effectiveeditcols)
#if($column.edit && !$column.superColumn && !$column.pk && $column.htmlType == "datetime")
    <th:block th:include="include :: datetimepicker-js" />
#break
#end
#end
#foreach($column in $effectiveeditcols)
#if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "upload")
    <th:block th:include="include :: bootstrap-fileinput-js"/>
#break
#end
#end
#foreach($column in $effectiveeditcols)
#if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "summernote")
    <th:block th:include="include :: summernote-js" />
#break
#end
#end
    <script th:inline="javascript">
        var prefix = ctx + "${moduleName}/${businessName}";
#if($table.sub)
#foreach($column in $subTable.columns)
#if(${column.dictType} != '')
        var ${column.javaField}Datas = [[${@dict.getType('${column.dictType}')}]];
#end
#end
#end
        $("#form-${businessName}-edit").validate({
#if($dspRepeatColumn)
            onkeyup: false,
            rules:{
                econName:{
                    remote: {
                        url: prefix + "/check${ClassName}Unique",
                        type: "post",
                        dataType: "json",
                        data: {
                            "${dspRepeatColumn.javaField}" : function() {
                                return $.common.trim($("#${dspRepeatColumn.javaField}").val());
                            }
                        },
                        dataFilter: function(data, type) {
                            return $.validate.unique(data);
                        }
                    }
                },
            },
            messages: {
                "${dspRepeatColumn.javaField}": {
                    remote: "${functionName} 名称已经存在"
                }
            },
#end
            focusCleanup: true
        });

        function submitHandler() {
            if ($.validate.form()) {
                $.operate.save(prefix + "/edit", $('#form-${businessName}-edit').serialize());
            }
        }
#foreach($column in $effectiveeditcols)
#if($column.edit && !$column.superColumn && !$column.pk && $column.htmlType == "datetime")

        $("input[name='$column.javaField']").datetimepicker({
            format: "yyyy-mm-dd",
            minView: "month",
            autoclose: true
        });
#end
#end
#foreach($column in $effectiveeditcols)
#if($column.edit && !$column.superColumn && !$column.pk && $column.htmlType == "upload")

        $(".file-upload").each(function (i) {
            var val = $("input[name='" + this.id + "']").val()
            $(this).fileinput({
                'uploadUrl': ctx + 'common/upload',
                initialPreviewAsData: true,
                initialPreview: [val],
                maxFileCount: 1,
                autoReplace: true
            }).on('fileuploaded', function (event, data, previewId, index) {
                $("input[name='" + event.currentTarget.id + "']").val(data.response.url)
            }).on('fileremoved', function (event, id, index) {
                $("input[name='" + event.currentTarget.id + "']").val('')
            })
            $(this).fileinput('_initFileActions');
        });
#break
#end
#end
#foreach($column in $effectiveeditcols)
#if($column.edit && !$column.superColumn && !$column.pk && $column.htmlType == "summernote")

        $(function() {
            $('.summernote').each(function(i) {
                $('#' + this.id).summernote({
                    lang: 'zh-CN',
                    callbacks: {
                        onChange: function(contents, $edittable) {
                            $("input[name='" + this.id + "']").val(contents);
                        },
                        onImageUpload: function(files) {
                            var obj = this;
                            var data = new FormData();
                            data.append("file", files[0]);
                            $.ajax({
                                type: "post",
                                url: ctx + "common/upload",
                                data: data,
                                cache: false,
                                contentType: false,
                                processData: false,
                                dataType: 'json',
                                success: function(result) {
                                    if (result.code == web_status.SUCCESS) {
                                        $('#' + obj.id).summernote('insertImage', result.url);
                                    } else {
                                        $.modal.alertError(result.msg);
                                    }
                                },
                                error: function(error) {
                                    $.modal.alertWarning("图片上传失败。");
                                }
                            });
                        }
                    }
                });
                var content = $("input[name='" + this.id + "']").val();
                $('#' + this.id).summernote('code', content);
            })
        });
#break
#end
#end
#if($table.tree)

        /*${functionName}-新增-选择父部门树*/
        function select${BusinessName}Tree() {
            var options = {
                title: '${functionName}选择',
                width: "380",
                url: prefix + "/select${BusinessName}Tree/" + $("#treeId").val(),
                callBack: doSubmit
            };
            $.modal.openOptions(options);
        }

        function doSubmit(index, layero){
            var body = layer.getChildFrame('body', index);
               $("#treeId").val(body.find('#treeId').val());
               $("#treeName").val(body.find('#treeName').val());
               layer.close(index);
        }
#end
#if($table.sub)

        $(function() {
            var options = {
                data: [[${${className}.${subclassName}List}]],
                pagination: false,
                showSearch: false,
                showRefresh: false,
                showToggle: false,
                showColumns: false,
                sidePagination: "client",
                columns: [{
                    checkbox: true
                },
                {
                    field: 'index',
                    align: 'center',
                    title: "序号",
                    formatter: function (value, row, index) {
                    	var columnIndex = $.common.sprintf("<input type='hidden' name='index' value='%s'>", $.table.serialNumber(index));
                    	return columnIndex + $.table.serialNumber(index);
                    }
                },
#foreach($column in $subTable.columns)
#set($dictType=$column.dictType)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.pk || $javaField == ${subTableFkclassName})
#elseif($column.list && "" != $dictType)
                {
                    field: '${javaField}',
                    align: 'center',
                    title: '${comment}',
                    formatter: function(value, row, index) {
                        var name = $.common.sprintf("${subclassName}List[%s].${javaField}", index);
                        return $.common.dictToSelect(${javaField}Datas, value, name);
                    }
                #if($velocityCount != $subTable.columns.size())},#end

#else
                {
                    field: '${javaField}',
                    align: 'center',
                    title: '${comment}',
                    formatter: function(value, row, index) {
                        var html = $.common.sprintf("<input class='form-control' type='text' name='${subclassName}List[%s].${javaField}' value='%s'>", index, value);
                        return html;
                    }
				#if($velocityCount != $subTable.columns.size())},#end

#end
#end
                }]
            };
            $.table.init(options);
        });

        function addColumn() {
            var count = $("#" + table.options.id).bootstrapTable('getData').length;
            sub.editColumn();
        	
            $("#" + table.options.id).bootstrapTable('insertRow', {
                index: count,
                row: {
                    index: $.table.serialNumber(count),
#foreach($column in $subTable.columns)
#set($javaField=$column.javaField)
#if($column.pk || $javaField == ${subTableFkclassName})
#else
                    ${javaField}: ""#if($velocityCount != $subTable.columns.size()),#end

#end
#end
        	    }
            });
        }
#end

#*
#if($createByColumn)
$("#updateBy").val([[${user.loginName}]]);
$("#updateByuserName").val([[${user.userName}]]);
$("#updateTime").val
( $.common.dateFormat(new Date(),'yyyy-MM-dd HH:mm:ss') ) ; //获取日期与时间
#end
*#
    </script>
</body>
</html>