<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.bend.mapper.MemberMapper">
    
    <resultMap type="Member" id="MemberResult">
        <result property="id"    column="id"    />
        <result property="mobilePhone"    column="mobile_phone"    />
        <result property="password"    column="password"    />
        <result property="realName"    column="real_name"    />
        <result property="idCardNo"    column="id_card_no"    />
        <result property="memberStatus"    column="member_status"    />
        <result property="memberType"    column="member_type"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deleted"    column="deleted"    />
    </resultMap>

    <sql id="selectMemberVo">
        select id, mobile_phone, password, real_name, id_card_no, member_status, member_type, create_time, update_time, deleted from bend_member
    </sql>

    <select id="selectMemberList" parameterType="Member" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        <where>  
            <if test="mobilePhone != null  and mobilePhone != ''"> and mobile_phone = #{mobilePhone}</if>
            <if test="realName != null  and realName != ''"> and real_name like concat('%', #{realName}, '%')</if>
            <if test="idCardNo != null  and idCardNo != ''"> and id_card_no = #{idCardNo}</if>
            <if test="memberStatus != null "> and member_status = #{memberStatus}</if>
            <if test="memberType != null "> and member_type = #{memberType}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
        </where>
    </select>
    
    <select id="selectMemberById" parameterType="Long" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="id">
        insert into bend_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mobilePhone != null">mobile_phone,</if>
            <if test="password != null">password,</if>
            <if test="realName != null">real_name,</if>
            <if test="idCardNo != null">id_card_no,</if>
            <if test="memberStatus != null">member_status,</if>
            <if test="memberType != null">member_type,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="deleted != null">deleted,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mobilePhone != null">#{mobilePhone},</if>
            <if test="password != null">#{password},</if>
            <if test="realName != null">#{realName},</if>
            <if test="idCardNo != null">#{idCardNo},</if>
            <if test="memberStatus != null">#{memberStatus},</if>
            <if test="memberType != null">#{memberType},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="deleted != null">#{deleted},</if>
         </trim>
    </insert>

    <update id="updateMember" parameterType="Member">
        update bend_member
        <trim prefix="SET" suffixOverrides=",">
            <if test="mobilePhone != null">mobile_phone = #{mobilePhone},</if>
            <if test="password != null">password = #{password},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="idCardNo != null">id_card_no = #{idCardNo},</if>
            <if test="memberStatus != null">member_status = #{memberStatus},</if>
            <if test="memberType != null">member_type = #{memberType},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMemberById" parameterType="Long">
        delete from bend_member where id = #{id}
    </delete>

    <delete id="deleteMemberByIds" parameterType="String">
        delete from bend_member where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>