<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AccountAddressInfoMapper">

    <resultMap type="AccountAddressInfo" id="AccountAddressInfoResult">
        <result property="idAccoutAddressInfo"    column="id_accout_address_info"    />
        <result property="address"    column="address"    />
        <result property="busiType"    column="busi_type"    />
        <result property="encryptPrivateKey"    column="encrypt_private_key"    />
        <result property="encryptKey"    column="encrypt_key"    />
        <result property="isValid"    column="is_valid"    />
        <result property="fcd"    column="fcd"    />
        <result property="fcu"    column="fcu"    />
        <result property="lcd"    column="lcd"    />
        <result property="lcu"    column="lcu"    />
    </resultMap>

    <sql id="selectAccountAddressInfoVo">
        select id_accout_address_info, address, busi_type, encrypt_private_key, encrypt_key, is_valid, fcd, fcu, lcd, lcu from account_address_info
    </sql>

    <select id="selectAccountAddressInfoList" parameterType="AccountAddressInfo" resultMap="AccountAddressInfoResult">
        <include refid="selectAccountAddressInfoVo"/>
        <where>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="busiType != null  and busiType != ''"> and busi_type = #{busiType}</if>
            <if test="encryptPrivateKey != null  and encryptPrivateKey != ''"> and encrypt_private_key = #{encryptPrivateKey}</if>
            <if test="encryptKey != null  and encryptKey != ''"> and encrypt_key = #{encryptKey}</if>
            <if test="isValid != null  and isValid != ''"> and is_valid = #{isValid}</if>
            <if test="fcd != null "> and fcd = #{fcd}</if>
            <if test="fcu != null  and fcu != ''"> and fcu = #{fcu}</if>
            <if test="lcd != null "> and lcd = #{lcd}</if>
            <if test="lcu != null  and lcu != ''"> and lcu = #{lcu}</if>
        </where>
    </select>

    <select id="selectAccountAddressInfoByIdAccoutAddressInfo" parameterType="Long" resultMap="AccountAddressInfoResult">
        <include refid="selectAccountAddressInfoVo"/>
        where id_accout_address_info = #{idAccoutAddressInfo}
    </select>

    <insert id="insertAccountAddressInfo" parameterType="AccountAddressInfo" useGeneratedKeys="true" keyProperty="idAccoutAddressInfo">
        insert into account_address_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="address != null">address,</if>
            <if test="busiType != null">busi_type,</if>
            <if test="encryptPrivateKey != null">encrypt_private_key,</if>
            <if test="encryptKey != null">encrypt_key,</if>
            <if test="isValid != null">is_valid,</if>
            <if test="fcd != null">fcd,</if>
            <if test="fcu != null">fcu,</if>
            <if test="lcd != null">lcd,</if>
            <if test="lcu != null">lcu,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="address != null">#{address},</if>
            <if test="busiType != null">#{busiType},</if>
            <if test="encryptPrivateKey != null">#{encryptPrivateKey},</if>
            <if test="encryptKey != null">#{encryptKey},</if>
            <if test="isValid != null">#{isValid},</if>
            <if test="fcd != null">#{fcd},</if>
            <if test="fcu != null">#{fcu},</if>
            <if test="lcd != null">#{lcd},</if>
            <if test="lcu != null">#{lcu},</if>
        </trim>
    </insert>

    <update id="updateAccountAddressInfo" parameterType="AccountAddressInfo">
        update account_address_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="address != null">address = #{address},</if>
            <if test="busiType != null">busi_type = #{busiType},</if>
            <if test="encryptPrivateKey != null">encrypt_private_key = #{encryptPrivateKey},</if>
            <if test="encryptKey != null">encrypt_key = #{encryptKey},</if>
            <if test="isValid != null">is_valid = #{isValid},</if>
            <if test="fcd != null">fcd = #{fcd},</if>
            <if test="fcu != null">fcu = #{fcu},</if>
            <if test="lcd != null">lcd = #{lcd},</if>
            <if test="lcu != null">lcu = #{lcu},</if>
        </trim>
        where id_accout_address_info = #{idAccoutAddressInfo}
    </update>

    <delete id="deleteAccountAddressInfoByIdAccoutAddressInfo" parameterType="Long">
        delete from account_address_info where id_accout_address_info = #{idAccoutAddressInfo}
    </delete>

    <delete id="deleteAccountAddressInfoByIdAccoutAddressInfos" parameterType="String">
        delete from account_address_info where id_accout_address_info in
        <foreach item="idAccoutAddressInfo" collection="array" open="(" separator="," close=")">
            #{idAccoutAddressInfo}
        </foreach>
    </delete>

</mapper>