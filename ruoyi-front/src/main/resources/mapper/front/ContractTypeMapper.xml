<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.front.mapper.ContractTypeMapper">
    
    <resultMap type="ContractType" id="ContractTypeResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="englishName"    column="english_name"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectContractTypeVo">
        select id, name, english_name, del_flag, create_by, create_time, update_by, update_time, remark from contract_type
    </sql>

    <select id="selectContractTypeList" parameterType="ContractType" resultMap="ContractTypeResult">
        <include refid="selectContractTypeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="englishName != null  and englishName != ''"> and english_name like concat('%', #{englishName}, '%')</if>
        </where>
    </select>
    
    <select id="selectContractTypeById" parameterType="Long" resultMap="ContractTypeResult">
        <include refid="selectContractTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertContractType" parameterType="ContractType" useGeneratedKeys="true" keyProperty="id">
        insert into contract_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="englishName != null and englishName != ''">english_name,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="englishName != null and englishName != ''">#{englishName},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateContractType" parameterType="ContractType">
        update contract_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="englishName != null and englishName != ''">english_name = #{englishName},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteContractTypeById" parameterType="Long">
        delete from contract_type where id = #{id}
    </delete>

    <delete id="deleteContractTypeByIds" parameterType="String">
        delete from contract_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>